<unity>
  <typeAliases>
    <typeAlias alias="perRequest" type="OrgPort.UnityExtensions.HttpPerRequestLifetimeManager, OrgPort" />
  </typeAliases>
  <containers>
    <container name="container">
      <types>

        
        <type type="OrgPort.Data.IRepositoryInitializer,  OrgPort.Data" mapTo="OrgPort.DB.RepositoryInitializer, OrgPort.DB">
          <lifetime type="perRequest" />
        </type>
        <type type="OrgPort.DB.IUnitOfWork, OrgPort.DB" mapTo="OrgPort.DB.OrgPortDBContext, OrgPort.DB">
          <lifetime type="perRequest" />
        </type>

        <!--database repositories-->
        <type type="OrgPort.Data.INewsItemRepository, OrgPort.Data" mapTo="OrgPort.DB.Repository.NewsItemRepository, OrgPort.DB">
          <lifetime type="perRequest" />
        </type>
        <type type="OrgPort.Data.IUserRepository, OrgPort.Data" mapTo="OrgPort.DB.Repository.UserRepository, OrgPort.DB">
          <lifetime type="perRequest" />
        </type>
        <type type="OrgPort.AuthenticationExtentions.IAuthentication, OrgPort" mapTo="OrgPort.AuthenticationExtentions.Authentication, OrgPort">
          <lifetime type="perRequest" />
        </type>
        <type type="OrgPort.AuthenticationExtentions.IAuthenticationCookieProvider, OrgPort" mapTo="OrgPort.AuthenticationExtentions.HttpContextCookieProvider, OrgPort">
          <lifetime type="perRequest" />
        </type>
        <type type="OrgPort.Domain.Mappers.IMapper, OrgPort.Domain" mapTo="OrgPort.Domain.Mappers.OrgPortMapper, OrgPort.Domain">
          <lifetime type="perRequest" />
        </type>

      </types>
    </container>
  </containers>
</unity>

